<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on To be the Light</title><link>https://wlemuel.github.io/series/linux/</link><description>Recent content in Linux on To be the Light</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 16 Mar 2023 00:26:14 +0800</lastBuildDate><atom:link href="https://wlemuel.github.io/series/linux/index.xml" rel="self" type="application/rss+xml"/><item><title> BSD Roots of Linux Command Line Tools: Parameters without "â€“" Syntax</title><link>https://wlemuel.github.io/2023/03/16/bsd-roots-of-linux-command-line-tools-parameters-without-syntax/</link><pubDate>Thu, 16 Mar 2023 00:26:14 +0800</pubDate><guid>https://wlemuel.github.io/2023/03/16/bsd-roots-of-linux-command-line-tools-parameters-without-syntax/</guid><description>&lt;p>If you&amp;rsquo;ve ever used the command line in Linux, you&amp;rsquo;re probably familiar with the
tar command. tar is a command-line utility that is used to create, manipulate,
and extract files from archives. One thing you may have noticed about tar and
other command line tools in Linux is that they often allow you to specify
parameters without the &amp;ndash; syntax commonly used in other systems. For example, in
Linux, you can create a tar archive using the following command:&lt;/p></description></item><item><title>Tracking down where disk space has gone on Linux</title><link>https://wlemuel.github.io/2020/09/15/tracking-down-where-disk-space-has-gone-on-linux/</link><pubDate>Tue, 15 Sep 2020 18:42:33 +0800</pubDate><guid>https://wlemuel.github.io/2020/09/15/tracking-down-where-disk-space-has-gone-on-linux/</guid><description>&lt;p>As a Linux administrator, I recently encountered a situation where one of my
servers was displaying low disk utilization. To rectify the issue, I decided to
employ a strategy of decluttering by removing any redundant files, including
expired logs.&lt;/p>
&lt;p>In order to accomplish this task, I first established a secure remote connection
to the server using ssh. Then, I embarked on the following series of steps to
reclaim the precious disk space and restore optimal performance to my Linux
system.&lt;/p></description></item><item><title>Make TeamViewer Work on Arch Linux</title><link>https://wlemuel.github.io/2020/03/09/make-teamviewer-work-on-arch-linux/</link><pubDate>Mon, 09 Mar 2020 15:36:08 +0800</pubDate><guid>https://wlemuel.github.io/2020/03/09/make-teamviewer-work-on-arch-linux/</guid><description>&lt;h1 id="problem-description">
 Problem Description
 &lt;a class="heading-link" href="#problem-description">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h1>
&lt;p>I was trying to setup TeamViewer 15.4 on Arch (manjaro) Linux in office, so that I could remotely connect to it from my home computer, which is a MacBook also running TeamViewer. I had all the login credentials and stuff, but TeamViewer on ArchLinux said &amp;ldquo;Not Ready, Please check your connection&amp;rdquo;. It won&amp;rsquo;t allow me to log in or attempt to connect to anything.&lt;/p></description></item></channel></rss>